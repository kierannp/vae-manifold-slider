{"ast":null,"code":"var _jsxFileName = \"/Users/knp/vae-slider/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport DoubleSlider from './doubleSlider';\nimport React, { useState, useRef } from 'react';\nimport * as tf from '@tensorflow/tfjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  async function loadModel() {\n    try {\n      return await tf.loadLayersModel(url.modelLink);\n    } catch (err) {\n      alert(\"model loading error....\");\n    }\n  }\n\n  async function secondLoad() {\n    const t = await loadModel();\n  }\n\n  const url = {\n    modelLink: 'https://storage.googleapis.com/test-tfjs/model.json',\n    binData: 'https://storage.googleapis.com/test-tfjs/group1-shard1of1.bin'\n  };\n  const decoder = loadModel;\n  secondLoad();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(DoubleSlider, {\n        decoder: decoder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/knp/vae-slider/src/App.js"],"names":["DoubleSlider","React","useState","useRef","tf","App","loadModel","loadLayersModel","url","modelLink","err","alert","secondLoad","t","binData","decoder"],"mappings":";;AACA,OAAO,WAAP;AACA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAuC,OAAvC;AACA,OAAO,KAAKC,EAAZ,MAAoB,kBAApB;;;AAEA,SAASC,GAAT,GAAe;AACb,iBAAeC,SAAf,GAA2B;AACzB,QAAI;AACF,aAAO,MAAMF,EAAE,CAACG,eAAH,CAAmBC,GAAG,CAACC,SAAvB,CAAb;AACD,KAFD,CAEE,OAAOC,GAAP,EAAY;AACZC,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACD;AACF;;AACD,iBAAeC,UAAf,GAA4B;AAC1B,UAAMC,CAAC,GAAG,MAAMP,SAAS,EAAzB;AACD;;AACD,QAAME,GAAG,GAAG;AACVC,IAAAA,SAAS,EAAE,qDADD;AAEVK,IAAAA,OAAO,EAAE;AAFC,GAAZ;AAIA,QAAMC,OAAO,GAAGT,SAAhB;AACAM,EAAAA,UAAU;AACV,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,OAAO,EAAEG;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KAzBQV,G;AA2BT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport DoubleSlider from './doubleSlider';\nimport React, { useState, useRef} from 'react';\nimport * as tf from '@tensorflow/tfjs';\n\nfunction App() {\n  async function loadModel() {\n    try {\n      return await tf.loadLayersModel(url.modelLink);\n    } catch (err) {\n      alert(\"model loading error....\");\n    }\n  }\n  async function secondLoad() {\n    const t = await loadModel();\n  }\n  const url = {\n    modelLink: 'https://storage.googleapis.com/test-tfjs/model.json',\n    binData: 'https://storage.googleapis.com/test-tfjs/group1-shard1of1.bin'\n  };\n  const decoder = loadModel\n  secondLoad();\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <DoubleSlider decoder={decoder}></DoubleSlider>\n      </header>\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}