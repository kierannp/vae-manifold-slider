{"ast":null,"code":"var _jsxFileName = \"/Users/knp/vae-slider/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport DoubleSlider from './doubleSlider';\nimport React, { useState, useRef } from 'react';\nimport * as tf from '@tensorflow/tfjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  async function loadModel() {\n    try {\n      decoder = await tf.loadLayersModel(url.modelLink);\n    } catch (err) {\n      alert(\"model loading error....\");\n    }\n  }\n\n  async function secondLoad() {\n    let response = await loadModel();\n  }\n\n  const url = {\n    modelLink: 'https://storage.googleapis.com/test-tfjs/model.json',\n    binData: 'https://storage.googleapis.com/test-tfjs/group1-shard1of1.bin'\n  };\n  let decoder;\n  tf.loadLayersModel(url.modelLink).then(model => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(DoubleSlider, {\n          decoder: decoder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }); // let response = secondLoad();\n  // console.log(decoder);\n  // return (\n  //   <div className=\"App\">\n  //     <header className=\"App-header\">\n  //       <DoubleSlider decoder={decoder}></DoubleSlider>\n  //     </header>\n  //   </div>\n  // );\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/knp/vae-slider/src/App.js"],"names":["DoubleSlider","React","useState","useRef","tf","App","loadModel","decoder","loadLayersModel","url","modelLink","err","alert","secondLoad","response","binData","then","model"],"mappings":";;AACA,OAAO,WAAP;AACA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAuC,OAAvC;AACA,OAAO,KAAKC,EAAZ,MAAoB,kBAApB;;;AAEA,SAASC,GAAT,GAAe;AACb,iBAAeC,SAAf,GAA2B;AACzB,QAAI;AACFC,MAAAA,OAAO,GAAG,MAAMH,EAAE,CAACI,eAAH,CAAmBC,GAAG,CAACC,SAAvB,CAAhB;AACD,KAFD,CAEE,OAAOC,GAAP,EAAY;AACZC,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACD;AACF;;AACD,iBAAeC,UAAf,GAA4B;AAC1B,QAAIC,QAAQ,GAAI,MAAMR,SAAS,EAA/B;AACD;;AACD,QAAMG,GAAG,GAAG;AACVC,IAAAA,SAAS,EAAE,qDADD;AAEVK,IAAAA,OAAO,EAAE;AAFC,GAAZ;AAIA,MAAIR,OAAJ;AACAH,EAAAA,EAAE,CAACI,eAAH,CAAmBC,GAAG,CAACC,SAAvB,EAAkCM,IAAlC,CAAwCC,KAAD,IAAW;AAChD,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEV;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GATD,EAhBa,CA0Bb;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACD;;KApCQF,G;AAsCT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport DoubleSlider from './doubleSlider';\nimport React, { useState, useRef} from 'react';\nimport * as tf from '@tensorflow/tfjs';\n\nfunction App() {\n  async function loadModel() {\n    try {\n      decoder = await tf.loadLayersModel(url.modelLink);\n    } catch (err) {\n      alert(\"model loading error....\");\n    }\n  }\n  async function secondLoad() {\n    let response =  await loadModel();\n  }\n  const url = {\n    modelLink: 'https://storage.googleapis.com/test-tfjs/model.json',\n    binData: 'https://storage.googleapis.com/test-tfjs/group1-shard1of1.bin'\n  };\n  let decoder;\n  tf.loadLayersModel(url.modelLink).then((model) => {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <DoubleSlider decoder={decoder}></DoubleSlider>\n        </header>\n        \n      </div>\n    );\n  })\n  // let response = secondLoad();\n  // console.log(decoder);\n  // return (\n  //   <div className=\"App\">\n  //     <header className=\"App-header\">\n  //       <DoubleSlider decoder={decoder}></DoubleSlider>\n  //     </header>\n      \n  //   </div>\n  // );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}