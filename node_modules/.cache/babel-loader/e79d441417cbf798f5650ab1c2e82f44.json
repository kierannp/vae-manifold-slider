{"ast":null,"code":"var _jsxFileName = \"/Users/knp/vae-slider/src/doubleSlider.js\",\n    _s = $RefreshSig$();\n\n// import Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport './doubleSlider.css';\nimport { useState, useRef } from 'react';\nimport * as tf from '@tensorflow/tfjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet result;\n\nfunction DoubleSlider() {\n  _s();\n\n  const [sliderVState, setSliderVState] = useState(0);\n  const [sliderHState, setSliderHState] = useState(0);\n  const canvasRef = useRef();\n\n  let handleVChange = (e, val) => setSliderVState(val);\n\n  let handleHChange = (e, val) => setSliderHState(val);\n\n  async function processState() {\n    let inputTensor = tf.tensor([sliderHState, sliderVState], [1, 2]);\n    result = decoder.predict(inputTensor, {\n      batchSize: 1\n    }).reshape([28, 28]);\n    await tf.browser.toPixels(result, canvasRef.current);\n  }\n\n  async function loadModel() {\n    try {\n      decoder = await tf.loadLayersModel(url.modelLink);\n    } catch (err) {\n      alert(\"model loading error....\");\n    }\n  }\n\n  async function secondLoad() {\n    const t = await loadModel();\n  }\n\n  const url = {\n    modelLink: 'https://storage.googleapis.com/test-tfjs/model.json',\n    binData: 'https://storage.googleapis.com/test-tfjs/group1-shard1of1.bin'\n  };\n  let decoder;\n  useEffect(() => {\n    const fetchModel = async () => {\n      const products = await tf.loadLayersModel(url.modelLink);\n      console.log(products);\n      decoder = products;\n    };\n\n    fetchModel();\n  });\n  processState();\n  console.log(sliderHState, sliderVState);\n  console.log(decoder);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"large-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-box\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vSlider\",\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        orientation: \"vertical\" // getAriaValueText={valuetext}\n        ,\n        defaultValue: 0,\n        step: .01,\n        \"aria-labelledby\": \"discrete-vertical-slider-small-steps\",\n        min: 0,\n        max: 1,\n        marks: true,\n        valueLabelDisplay: \"auto\",\n        onChange: handleVChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hSlider\",\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        defaultValue: 0 // getAriaValueText={valuetext}\n        ,\n        \"aria-labelledby\": \"discrete-slider-small-steps\",\n        step: .01,\n        marks: true,\n        min: 0,\n        max: 1,\n        valueLabelDisplay: \"auto\",\n        onChange: handleHChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DoubleSlider, \"mZLtZttWb4NBEOYGcPNq2IJMs/E=\");\n\n_c = DoubleSlider;\nexport default DoubleSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoubleSlider\");","map":{"version":3,"sources":["/Users/knp/vae-slider/src/doubleSlider.js"],"names":["Slider","useState","useRef","tf","result","DoubleSlider","sliderVState","setSliderVState","sliderHState","setSliderHState","canvasRef","handleVChange","e","val","handleHChange","processState","inputTensor","tensor","decoder","predict","batchSize","reshape","browser","toPixels","current","loadModel","loadLayersModel","url","modelLink","err","alert","secondLoad","t","binData","useEffect","fetchModel","products","console","log"],"mappings":"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","sourcesContent":["// import Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport './doubleSlider.css';\nimport { useState, useRef } from 'react';\nimport * as tf from '@tensorflow/tfjs';\n\nlet result;\n\nfunction DoubleSlider() {  \n    const [sliderVState, setSliderVState] = useState(0);\n    const [sliderHState, setSliderHState] = useState(0);\n    const canvasRef = useRef();\n    let handleVChange = (e, val) => setSliderVState(val);\n    let handleHChange = (e, val) => setSliderHState(val);\n    async function processState() {\n      let inputTensor = tf.tensor([sliderHState, sliderVState],[1, 2]);\n      result = decoder.predict(inputTensor,{batchSize: 1}).reshape([28,28]);\n      await tf.browser.toPixels(result, canvasRef.current);\n    }\n    async function loadModel() {\n      try {\n        decoder = await tf.loadLayersModel(url.modelLink);\n      } catch (err) {\n        alert(\"model loading error....\");\n      }\n    }\n    async function secondLoad() {\n      const t = await loadModel()\n    }\n    const url = {\n      modelLink: 'https://storage.googleapis.com/test-tfjs/model.json',\n      binData: 'https://storage.googleapis.com/test-tfjs/group1-shard1of1.bin'\n    };\n    let decoder;\n    useEffect(() => {\n      const fetchModel = async () => {\n        const products = await tf.loadLayersModel(url.modelLink)\n        console.log(products)\n        decoder = products;\n      }\n      fetchModel()\n    })\n\n    processState();\n    console.log(sliderHState, sliderVState);\n    console.log(decoder);\n    return (\n    <div className=\"large-box\">  \n      <div className=\"image-box\">\n        <canvas ref={canvasRef}></canvas>\n      </div>\n      <div className=\"vSlider\">\n        <Slider\n          orientation=\"vertical\"\n          // getAriaValueText={valuetext}\n          defaultValue={0}\n          step={.01}\n          aria-labelledby=\"discrete-vertical-slider-small-steps\"\n          min={0}\n          max={1}\n          marks\n          valueLabelDisplay=\"auto\"\n          onChange={handleVChange}\n        />\n      </div>\n      <div className=\"hSlider\">\n        <Slider\n          defaultValue={0}\n          // getAriaValueText={valuetext}\n          aria-labelledby=\"discrete-slider-small-steps\"\n          step={.01}\n          marks\n          min={0}\n          max={1}\n          valueLabelDisplay=\"auto\"\n          onChange={handleHChange}\n        />\n      </div>\n    </div>\n    );\n  }\n  export default DoubleSlider;"]},"metadata":{},"sourceType":"module"}