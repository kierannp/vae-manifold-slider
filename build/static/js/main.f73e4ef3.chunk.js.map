{"version":3,"sources":["doubleSlider.js","App.js","index.js"],"names":["decoder","result","url","DoubleSlider","useState","sliderVState","setSliderVState","sliderHState","setSliderHState","canvasRef","useRef","loadModel","a","tf","alert","processState","inputTensor","predict","batchSize","reshape","toPixels","current","secondLoad","then","console","log","className","ref","Slider","orientation","defaultValue","step","aria-labelledby","min","max","marks","valueLabelDisplay","onChange","e","val","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAMIA,EACAC,E,qHACAC,EACS,0FA+DIC,MA5DjB,WAAyB,IAAD,EACoBC,mBAAS,GAD7B,mBACbC,EADa,KACCC,EADD,OAEoBF,mBAAS,GAF7B,mBAEbG,EAFa,KAECC,EAFD,KAGdC,EAAYC,mBAHE,SAOLC,IAPK,2EAOpB,sBAAAC,EAAA,+EAEoBC,IAAmBX,GAFvC,OAEIF,EAFJ,sDAIIc,MAAM,2BAJV,yDAPoB,kEAcpB,sBAAAF,EAAA,sEACkBD,IADlB,0DAdoB,+BAiBLI,IAjBK,2EAiBpB,4BAAAH,EAAA,6DACMI,EAAcH,IAAU,CAACN,EAAcF,GAAc,CAAC,EAAG,IAC7DJ,EAASD,EAAQiB,QAAQD,EAAY,CAACE,UAAW,IAAIC,QAAQ,CAAC,GAAG,KAFnE,SAGQN,IAAWO,SAASnB,EAAQQ,EAAUY,SAH9C,4CAjBoB,sBAyBpB,OAzBoB,0CAsBVC,GAAaC,KAAb,sBAAmB,sBAAAX,EAAA,sEAAkBG,IAAlB,oFAE7BS,QAAQC,IAAIlB,EAAcF,GAE1B,sBAAKqB,UAAU,YAAf,UACE,qBAAKA,UAAU,YAAf,SACE,wBAAQC,IAAKlB,MAEf,qBAAKiB,UAAU,UAAf,SACE,cAACE,EAAA,EAAD,CACEC,YAAY,WAEZC,aAAc,EACdC,KAAM,IACNC,kBAAgB,uCAChBC,KAAM,EACNC,IAAK,EACLC,OAAK,EACLC,kBAAkB,OAClBC,SArCc,SAACC,EAAGC,GAAJ,OAAYjC,EAAgBiC,QAwC9C,qBAAKb,UAAU,UAAf,SACE,cAACE,EAAA,EAAD,CACEE,aAAc,EAEdE,kBAAgB,8BAChBD,KAAM,IACNI,OAAK,EACLF,KAAM,EACNC,IAAK,EACLE,kBAAkB,OAClBC,SAjDc,SAACC,EAAGC,GAAJ,OAAY/B,EAAgB+B,YCHrCC,MAVf,WACE,OACE,qBAAKd,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCHRe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f73e4ef3.chunk.js","sourcesContent":["// import Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport './doubleSlider.css';\nimport { useState, useRef } from 'react';\nimport * as tf from '@tensorflow/tfjs';\n\nlet decoder;\nlet result;\nvar url = {\n  modelLink: 'https://cors-anywhere.herokuapp.com/https://storage.googleapis.com/test-tfjs/model.json',\n  binData: 'https://cors-anywhere.herokuapp.com/https://storage.googleapis.com/test-tfjs/group1-shard1of1.bin'\n};    \nfunction DoubleSlider() {  \n    const [sliderVState, setSliderVState] = useState(0);\n    const [sliderHState, setSliderHState] = useState(0);\n    const canvasRef = useRef();\n    let handleVChange = (e, val) => setSliderVState(val);\n    let handleHChange = (e, val) => setSliderHState(val);\n\n    async function loadModel() {\n      try {\n        decoder = await tf.loadLayersModel(url.modelLink);\n      } catch (err) {\n        alert(\"model loading error....\");\n      }\n    }\n    async function secondLoad(){\n      let res = await loadModel();\n    }\n    async function processState() {\n      let inputTensor = tf.tensor([sliderHState, sliderVState],[1, 2]);\n      result = decoder.predict(inputTensor,{batchSize: 1}).reshape([28,28]);\n      await tf.browser.toPixels(result, canvasRef.current);\n    }\n    let res = secondLoad().then( async () => await processState());\n    \n    console.log(sliderHState, sliderVState);\n    return (\n    <div className=\"large-box\">  \n      <div className=\"image-box\">\n        <canvas ref={canvasRef}></canvas>\n      </div>\n      <div className=\"vSlider\">\n        <Slider\n          orientation=\"vertical\"\n          // getAriaValueText={valuetext}\n          defaultValue={0}\n          step={.02}\n          aria-labelledby=\"discrete-vertical-slider-small-steps\"\n          min={-1}\n          max={1}\n          marks\n          valueLabelDisplay=\"auto\"\n          onChange={handleVChange}\n        />\n      </div>\n      <div className=\"hSlider\">\n        <Slider\n          defaultValue={0}\n          // getAriaValueText={valuetext}\n          aria-labelledby=\"discrete-slider-small-steps\"\n          step={.02}\n          marks\n          min={-1}\n          max={1}\n          valueLabelDisplay=\"auto\"\n          onChange={handleHChange}\n        />\n      </div>\n    </div>\n    );\n  }\n  export default DoubleSlider;","import './App.css';\nimport DoubleSlider from './doubleSlider';\nimport React, { useState, useRef, useEffect} from 'react';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <DoubleSlider></DoubleSlider>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}